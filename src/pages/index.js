import Head from "next/head";
import { Suspense, useCallback, useContext, useEffect, useState } from "react";
import { Inter, Island_Moments } from "next/font/google";
const inter = Inter({ subsets: ["latin"] });
import {
  Container,
  Stack,
  Input,
  SimpleGrid,
  Flex,
  Box,
  useDisclosure,
  Center,
  Heading,
  VStack,
  InputGroup,
  InputRightElement,
  Checkbox,
} from "@chakra-ui/react";
import { SearchIcon } from "@chakra-ui/icons";
import PokemonCard from "@/components/PokemonCard";
import { loadPokemonList } from "@/utils/functions";
import { CaughtPokemonContext } from "@/context";
import PokemonDataModal from "@/components/PokemonDataModal";
import ViewMore from "@/components/ViewMore";

export async function getStaticProps() {
  const pokemonList = await loadPokemonList(0);
  return { props: { pokemonList } };
}

export default function Home({ pokemonList }) {
  const pokemonDataModal = useDisclosure();
  const [pokemon, setPokemon] = useState(pokemonList);
  const [selectedPokemon, setSelectedPokemon] = useState();
  const [searchedPokemon, setSearchedPokemon] = useState("");
  const [showCaught, setShowCaught] = useState(false);
  const { caughtPokemon } = useContext(CaughtPokemonContext);

  const handleViewPokemon = useCallback(async (pokemon) => {
    setSelectedPokemon(pokemon);

    pokemonDataModal.onOpen();
  }, []);

  const handleSearch = useCallback((e) => {
    setSearchedPokemon(e.target.value);
  }, []);

  const handleAddPokemon = useCallback((pokemonArray) => {
    setPokemon(pokemonArray);
  }, []);

  const filteredPokemon = pokemon.filter((pokemon) => {
    const loweredSearchTerm = searchedPokemon.toLowerCase();
    const loweredName = pokemon.name.toLowerCase();
    if (showCaught) {
      return (
        caughtPokemon.some((poke) => poke.id === pokemon.id) &&
        loweredName &&
        loweredName.includes(loweredSearchTerm)
      );
    }
    return loweredName && loweredName.includes(loweredSearchTerm);
  });

  return (
    <>
      <Head>
        <title>Pokemon Challenge</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Center my={5}>
        <Container>
          <VStack alignItems={"center"}>
            <Heading>Pokemon List!</Heading>
            <InputGroup>
              <Input
                placeholder="Search your pokemon..."
                width={"100%"}
                onChange={handleSearch}
              />
              <InputRightElement>
                <SearchIcon />
              </InputRightElement>
            </InputGroup>
            <Checkbox onChange={() => setShowCaught(!showCaught)}>
              Show caught
            </Checkbox>
          </VStack>
        </Container>
      </Center>
      <Flex minH="100vh" justifyContent="center">
        <Container maxW="container.lg">
          <Stack p="5" alignItems="center" spacing="5">
            <SimpleGrid spacing="5" columns={{ base: 1, md: 5 }} w="100%">
              {filteredPokemon.map((pokemon) => (
                <Box
                  as="button"
                  key={pokemon.id}
                  onClick={() => handleViewPokemon(pokemon)}
                >
                  <PokemonCard pokemon={pokemon} />
                </Box>
              ))}
            </SimpleGrid>
            <ViewMore updatePokemon={handleAddPokemon} />
          </Stack>
        </Container>
      </Flex>
      <PokemonDataModal
        selectedPokemon={selectedPokemon}
        pokemonDataModal={pokemonDataModal}
      />
    </>
  );
}
